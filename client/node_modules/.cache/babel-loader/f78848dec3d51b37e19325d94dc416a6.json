{"ast":null,"code":"var _jsxFileName = \"/home/fabian/Henry_Pi/Pokemon/client/src/components/buttonCreate.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport buttonCreate from '../css/buttonCreate.module.css';\nimport pokeButton from '../images/open-pokeball.png';\nimport { handleErrors } from '../redux/actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonCreate = () => {\n  _s();\n  const [errors, setErrors] = useState({});\n\n  // creamos una vallidacon para que en la base de datos no se repitan los nombres de los pokemones y muestre un error\n  const handleErrors = input => {\n    useState = {\n      errors: {\n        name: ''\n      }\n    };\n    let errors = {\n      name: \"\",\n      hp: \"\",\n      attack: \"\",\n      defense: \"\",\n      speed: \"\",\n      height: \"\",\n      weight: \"\",\n      types: \"\"\n    };\n    if (!input.name) {\n      errors.name = \"Name is required\";\n    } else if (!/^[A-Za-z]+$/.test(input.name)) {\n      errors.name = \"Name must be only letters\";\n    }\n    return errors;\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"submit\",\n    className: buttonCreate.button,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: buttonCreate.poke1,\n      src: pokeButton,\n      alt: \"Img not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n      onClick: handleErrors,\n      children: \"crear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: buttonCreate.poke2,\n      src: pokeButton,\n      alt: \"Img not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(ButtonCreate, \"dzx+NAuBQ/AMRoOM9TtRzCEMMp8=\");\n_c = ButtonCreate;\nexport default ButtonCreate;\nvar _c;\n$RefreshReg$(_c, \"ButtonCreate\");","map":{"version":3,"names":["React","useState","buttonCreate","pokeButton","handleErrors","ButtonCreate","errors","setErrors","input","name","hp","attack","defense","speed","height","weight","types","test","button","poke1","poke2"],"sources":["/home/fabian/Henry_Pi/Pokemon/client/src/components/buttonCreate.jsx"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport buttonCreate from '../css/buttonCreate.module.css';\nimport pokeButton from '../images/open-pokeball.png';\nimport {handleErrors} from '../redux/actions/index';\n\n\n\n\nconst ButtonCreate = () => {\n\n    const [errors, setErrors] = useState({\n        \n    });\n\n    // creamos una vallidacon para que en la base de datos no se repitan los nombres de los pokemones y muestre un error\n     const handleErrors = (input) => {\n        useState = {\n            errors: {\n                name: '',\n\n            }\n        }\n        let errors = {\n            name: \"\",\n            hp: \"\",\n            attack: \"\",\n            defense: \"\",\n            speed: \"\",\n            height: \"\",\n            weight: \"\",\n            types: \"\",\n\n        };\n        if (!input.name) {\n            errors.name = \"Name is required\";\n        } else if (!/^[A-Za-z]+$/.test(input.name)) {\n            errors.name = \"Name must be only letters\";\n        }\n        return errors;\n    };\n\n      \n     \n     \n    return (\n       \n        <button type=\"submit\" className={buttonCreate.button}>\n            <img className={buttonCreate.poke1} src={pokeButton} alt=\"Img not found\" />\n         {/* aca va el boton de validate */}\n           <b onClick={handleErrors}>crear</b>\n            <img className={buttonCreate.poke2} src={pokeButton} alt=\"Img not found\" />\n        </button>\n    )\n};\n\nexport default ButtonCreate;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAOC,UAAU,MAAM,6BAA6B;AACpD,SAAQC,YAAY,QAAO,wBAAwB;AAAC;AAKpD,MAAMC,YAAY,GAAG,MAAM;EAAA;EAEvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,CAErC,CAAC,CAAC;;EAEF;EACC,MAAMG,YAAY,GAAII,KAAK,IAAK;IAC7BP,QAAQ,GAAG;MACPK,MAAM,EAAE;QACJG,IAAI,EAAE;MAEV;IACJ,CAAC;IACD,IAAIH,MAAM,GAAG;MACTG,IAAI,EAAE,EAAE;MACRC,EAAE,EAAE,EAAE;MACNC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE;IAEX,CAAC;IACD,IAAI,CAACR,KAAK,CAACC,IAAI,EAAE;MACbH,MAAM,CAACG,IAAI,GAAG,kBAAkB;IACpC,CAAC,MAAM,IAAI,CAAC,aAAa,CAACQ,IAAI,CAACT,KAAK,CAACC,IAAI,CAAC,EAAE;MACxCH,MAAM,CAACG,IAAI,GAAG,2BAA2B;IAC7C;IACA,OAAOH,MAAM;EACjB,CAAC;EAKD,oBAEI;IAAQ,IAAI,EAAC,QAAQ;IAAC,SAAS,EAAEJ,YAAY,CAACgB,MAAO;IAAA,wBACjD;MAAK,SAAS,EAAEhB,YAAY,CAACiB,KAAM;MAAC,GAAG,EAAEhB,UAAW;MAAC,GAAG,EAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG,eAE5E;MAAG,OAAO,EAAEC,YAAa;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAU,eAClC;MAAK,SAAS,EAAEF,YAAY,CAACkB,KAAM;MAAC,GAAG,EAAEjB,UAAW;MAAC,GAAG,EAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACtE;AAEjB,CAAC;AAAC,GA7CIE,YAAY;AAAA,KAAZA,YAAY;AA+ClB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module"}